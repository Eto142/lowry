@import '../../settings/default-base-values';
@import 'customBaseValues';

// all values should be in a map called:
$modals: ();
// pick up the custom map from site-specific variables
@import 'custom.scss';
// and pass it to the v() function via the $v_map variable
$v_map: $modals;

.modal:not(.glightbox) {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1050;
    background: v(rgba(0,0,0,.2), backdrop_background, $modalBackdrop);

    .modal-dialog {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        margin: 0;
    }

    .modal-content {
        width: v(600px, width, $modalBaseWidth);
        max-width: v(40rem, max_width, $modalMaxWidth);
        max-height: 100%;
        overflow: auto;
        margin: v(30px, margin, $modalMargin);
        padding: v(30px 30px 15px 30px, padding, $modalPadding);
        border: v(none, border, $modalBorder);
        border-radius: v($defaultCardRadius, border_radius, $modalRadius);
        background: v($colorPageBg, background, $modalBackground);
        color: v($colorDefaultText, color, $modalColor);
        box-shadow: v($defaultBoxShadowDark, box_shadow, $modalShadow);
        animation: .2s ease-in-out forwards modal-slide-in;

        form {
            margin: 0;

            .msg {
                animation: message-slide-in .2s ease-in-out;
            }

            &.newsletter-subscribe-form.success {
                [for='NLSubscribeForm-email'],
                #NLSubscribeForm-email,
                button,
                .g-recaptcha {
                    display: none;
                }
            }
        }

        .modal-header {
            margin: v(0 0 30px 0, header_margin, $modalTitleMargin);
            padding: 0;
            border: none;

            .close-button {
                all: unset;
                position: absolute;
                top: 15px;
                right: 15px;
                color: v($grey2, x_color);
                transition: $defaultBtnTransitionLeave;
                appearance: none;
                cursor: pointer;
                &:hover {
                    color: v($colorDefaultText, x_color_hover);
                    transition: $defaultBtnTransitionEnter;
                }
            }

            .modal-title {
                font-family: v($fontNormalBold, title_font_family, $modalTitleFontfamily);
                font-weight: v(bold, title_font_weight, $modalTitleWeight);
                line-height: v(normal, title_line_height, $modalTitleLineHeight);
                text-transform: v(none, title_text_transform, $modalTitleTexttransform);
                color: v(inherit, title_color, $modalTitleColor);

                @include fontsize(v($basicH2Fontsize, title_font_size, $modalTitleSize));
            }
        }
    }

    &[aria-expanded='true'] {
        display: block;
    }
    &[aria-expanded='false']:not(.animating) {
        display: none;
    }
}

