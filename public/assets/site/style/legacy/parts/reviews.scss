@import '../../settings/default-base-values';
@import 'customBaseValues';

// all values should be in a map called:
$reviews: ();
// pick up the custom map from site-specific variables
@import 'custom.scss';
// and pass it to the v() function via the $v_map variable
$v_map: $reviews;

#reviews {
    position: relative;
    font-family: v($fontNormal, font_family, $reviewsFontfamily);
    font-weight: v(normal, font_weight, $reviewsWeight);
    line-height: v(inherit, line_height, $reviewsLineHeight);
    background: v($color1, background, $reviewsBackground);
    color: v($white, color, $reviewsColor);

    .reviewSlider {

        .slide {
            padding: v(60px, padding, $reviewsPadding);
            text-align: center;

            .container {
                max-width: 60em; // a sensible, readable line width
            }

            a {
                display: block;
                text-decoration: none;
                color: inherit;
                &:hover {
                    color: v($reviewsColor, color_hover, $reviewsHoverColor);

                    .title {
                        text-decoration: v(underline, text_decoration_hover, $reviewsHoverDecoration);
                        color: v($reviewsTitleColor, title_color_hover, $reviewsHoverTitleColor);
                    }
                }
                &[href='#'] {
                    pointer-events: none;
                }
            }

            .title {
                margin: v(0, title_margin, $reviewsTitleMargin);
                font-family: v($fontNormalBold, title_font_family, $reviewsTitleFontfamily);
                font-weight: v(bold, title_font_weight, $reviewsTitleWeight);
                line-height: v(inherit, title_line_height, $reviewsTitleLineHeight);
                text-transform: v(none, title_text_transform);
                color: v(inherit, title_color, $reviewsTitleColor);
                @include fontsize(v($basicH2Fontsize, title_font_size, $reviewsTitleFontsize));
            }

            .description {
                margin: v( 0 0 15px 0, desc_margin, $reviewsDescMargin);
                font-family: v($fontNormal, desc_font_family, $reviewsDescFontfamily);
                font-weight: v(normal, desc_font_weight, $reviewsDescWeight);
                text-transform: v(none, desc_text_transform);
                @include fontsize(v(inherit, desc_font_size, $reviewsDescFontsize));
            }

            .credits {
                @include fontsize(v(inherit, credits_font_size, $reviewsCreditsFontsize));
            }
        }
    }

    .arrows {
        display: flex;
        align-items: center;
        width: 100%;
        height: 100%;
        position: absolute;
        z-index: 1;
        pointer-events: none;
    }

    .nextBtn,
    .prevBtn {
        position: absolute;
        padding: 30px;
        border: none;

        background: none;
        color: inherit;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        transition: .4s opacity ease-in-out;
        opacity: .5;

        overflow: hidden;

        @include fontsize(50px);

        &.prevBtn {
            left: 0;
        }
        &.nextBtn {
            right: 0;
        }

        &:hover {
            transition: .2s opacity ease-in-out;
            opacity: 1;
        }
    }
}
